How did viewing a diff between two versions of a file help you see the bug that was introduced?
If you are able to see the difference between two different files the you can see what you have 
changed. Most of the time a bug will come from an area of the code that has been changed. The only
time that it hasn't is when different parts of the code effect each other.

How could having easy access to the entire history of a file make you a more efficient 
programmer in the long term?
This could make you a better coder because if you need to see how something was made or where
there is a problem in the code then you can access it quickly. Also when teaching someone how to 
code you can show older verisons of the code which will help you and them become better coders.

What do you think are the pros and cons of manually choosing when to create a commit, like you 
do in Git, vs having versions automatically saved, like Google Docs does?
The pros of this way of saving is that you will only save when it is logical to save. So you won't
have any version of code that wouldn't compile or wouldn't make any sense to have. The cons of 
this is that you are prone to human error when you forget to save. Also if your computer were to 
crash you wouldn't have a most recent file.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, 
while others, like Google Docs, treat each file separately?
Git allows saving multiple files in one commit because alot of times people that are coding are 
working on multiple files at once, so saving everything together is better for them. Google Docs 
typically is working with one thing at a time, so multiple files saved at once isn't necessary.

How can you use the commands git log and git diff to view the history of files?
git log is a command that is used to show a log of all of the different commits that have been saved,
what changes were listed, and what the commit id is. git diff is a command that shows all of the 
differences between two different files, including what has been added or deleted.

How might using version control make you more confident to make changes that could break something?
You will be much more confident because now if you make changes that could break things because you
could go back to other versions and not have to worry about not knowing where the change was made.

Now that you have your workspace set up, what do you want to try using Git for?
I would really like to try using git to edit different programs in my iOS developer course. I'm not
exactly certain how that will work though.